version = "$(pkg_version)"
description = "Feature-full driver for OCaml AST transformers"
requires = "ppx_core ppx_optcomp"
archive(byte  ) = "ppx_driver.cma"
archive(native) = "ppx_driver.cmxa"
plugin(byte  ) = "ppx_driver.cma"
plugin(native) = "ppx_driver.cmxs"
exists_if = "ppx_driver.cma"

# Until this is released: https://github.com/whitequark/ppx_deriving/pull/95
package "for_ppx_deriving" (
  description = "Don't use this directly"
  error(ppx_driver) = "Cannot use ppx_driver.for_ppx_deriving when ppx_driver is set"
  requires = "ppx_core.for_ppx_deriving ppx_deriving ppx_optcomp.for_ppx_deriving"
  exists_if = "ppx_driver.cma"
  ppxopt(-custom_ppx) = "ppx_deriving,./ppx_driver.cma"
)

package "ocamlbuild" (
  version = "$(pkg_version)"
  description = ""
  requires = "ocamlbuild"
  archive(byte  ) = "ppx_driver_ocamlbuild.cma"
  archive(native) = "ppx_driver_ocamlbuild.cmxa"
  plugin(byte  ) = "ppx_driver_ocamlbuild.cma"
  plugin(native) = "ppx_driver_ocamlbuild.cmxs"
  exists_if = "ppx_driver_ocamlbuild.cma"
)

package "runner" (
  version = "$(pkg_version)"
  description = ""
  requires = "ppx_driver"
  archive(byte  ) = "ppx_driver_runner.cma"
  archive(native) = "ppx_driver_runner.cmxa"
  plugin(byte  ) = "ppx_driver_runner.cma"
  plugin(native) = "ppx_driver_runner.cmxs"
  exists_if = "ppx_driver_runner.cma"
)

package "runner_as_ppx" (
  version = "$(pkg_version)"
  description = ""
  requires = "ppx_driver"
  archive(byte  ) = "ppx_driver_runner_as_ppx.cma"
  archive(native) = "ppx_driver_runner_as_ppx.cmxa"
  plugin(byte  ) = "ppx_driver_runner_as_ppx.cma"
  plugin(native) = "ppx_driver_runner_as_ppx.cmxs"
  exists_if = "ppx_driver_runner_as_ppx.cma"
)
